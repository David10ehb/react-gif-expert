{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GirGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","slug","original","images","downsized_large","downsized_medium","GirGridItem","props","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","texto","categories","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"mMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAiBzC,OACE,sBAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACFC,QAAQC,IAAIN,GACRA,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAKhB,SACE,uBACES,KAAK,OACLC,MAAOX,EACPY,SAlBoB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,a,+BCRdG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAECI,MAAMF,GAFP,cAEZG,EAFY,gBAGKA,EAAKC,OAHV,uBAGVC,EAHU,EAGVA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,KAAMH,EAAIG,KACVH,IAAK,CACHI,SAAUJ,EAAIK,OAAOD,SACrBE,gBAAiBN,EAAIK,OAAOC,gBAC5BC,iBAAkBP,EAAIK,OAAOE,kBAE/Bf,IAAKQ,EAAIR,IACTP,KAAMe,EAAIf,SAfI,kBAkBXa,GAlBW,4CAAH,sDCGNU,EAAc,SAACC,GACxB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAMT,IAAIO,iBAAiBf,IAAKoB,IAAKH,EAAMP,QACrD,kCAAKO,EAAMP,MAAX,WCoBGW,EAvBC,SAAC,GAAkB,IAAhBvB,EAAe,EAAfA,SAAe,ECCN,SAACA,GAAc,IAAD,EACdhB,mBAAS,CACjCuB,KAAM,GACNiB,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAU,WACR5B,EAAOC,GACJ4B,MAAK,SAAAC,GACJH,EAAS,CACPnB,KAAMsB,EACNL,SAAS,SAGd,CAACxB,IAEGyB,EDfwBK,CAAa9B,GAAhCe,EAFoB,EAEzBR,KAAaiB,EAFY,EAEZA,QAEpB,OACE,qCACE,qBAAIJ,UAAU,oCAAd,cAAoDpB,EAApD,OAEEwB,GAAW,mBAAGJ,UAAU,mCAAb,uBACZ,qBAAKA,UAAU,YAAf,SAEGL,EAAON,KAAI,SAAAC,GACT,OAAO,cAAC,EAAD,eAEDA,GADCA,EAAIC,aEZjBoB,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EAEEhD,mBAAS,CAAC,WAFZ,mBAE3BiD,EAF2B,KAEflD,EAFe,KAIlC,OACE,qCACE,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAAKiD,IACL,uBACA,6BAEIC,EAAWxB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEAA,SAAWA,GADNA,YAajB+B,EAAaG,aAAe,CAC1BF,MAAO,gBAEMD,Q,MC5BfI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.37005bcb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setcategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(inputValue);\r\n    if (inputValue.trim().length > 2) {\r\n      setcategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setcategories: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default AddCategory;","export const getGif = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hCv7R9XexRfhzAAeMjbiW7FeEX5J5Pd1`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        slug: img.slug,\r\n        img: {\r\n          original: img.images.original,\r\n          downsized_large: img.images.downsized_large,\r\n          downsized_medium: img.images.downsized_medium\r\n        },\r\n        url: img.url,\r\n        type: img.type,\r\n      }\r\n    })\r\n    return gifs;\r\n  }","import React from 'react';\r\n\r\n\r\nexport const GirGridItem = (props) => {\r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'>\r\n            <img src={props.img.downsized_medium.url} alt={props.title} />\r\n            <p> {props.title} </p>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GirGridItem } from \"./GirGridItem\";\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\n  const {data:images, loading} = useFetchGifs(category);\r\n  \r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__bounce'> {category} </h3>\r\n      \r\n      { loading && <p className='animate__animated animate__flash'> loading </p> }\r\n      {<div className='card-grid'>\r\n        {\r\n          images.map(img => {\r\n            return <GirGridItem\r\n              key={img.id}\r\n              {...img}\r\n            />\r\n          })\r\n        }\r\n      </div>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifGrid;","import { useEffect, useState } from \"react\"\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category)\r\n      .then(imgs => {\r\n        setstate({\r\n          data: imgs,\r\n          loading: false\r\n        });\r\n      });\r\n  }, [category]);\r\n\r\n  return state;\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = ({ texto }) => {\r\n\r\n  const [categories, setcategories] = useState(['naruro']);\r\n\r\n  return (\r\n    <>\r\n      <AddCategory setcategories={setcategories} />\r\n      <h2>{texto}</h2>\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map(category => (\r\n            <GifGrid\r\n            key={category} \r\n            category={ category}/>\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n  texto: PropTypes.string\r\n}\r\n\r\nGifExpertApp.defaultProps = {\r\n  texto: 'GifEXpertApp'\r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}